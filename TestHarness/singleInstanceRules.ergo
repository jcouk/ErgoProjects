//:- compiler_options{omni=on}.
//'testthinpost.xml'[load_xml(post) -> ?W]@\xml.

// attrValueOrObjectSix = Global Attr Public Name, Attribute Type (text, boolean, etc), entity type
//  attrVarFive = 'typ:attribute' or entity
returnGlobalAttributes(?attrVarFour, ?publicName, ?attrVarSix, ?attrVarSeven, ?attrValueOrObjectSeven) :- 
?_obj[?_attr -> ?_attrValueOrObjectOne]@post,
?_attr == medicaidRulebaseOutputVariable,
?_attrValueOrObjectOne[?_attrVarTwo -> ?_attrValueOrObjectTwo]@post,
?_attrValueOrObjectTwo[?_attrVarThree -> ?_attrValueOrObjectThree]@post,
?_attrValueOrObjectThree[?attrVarFour -> ?_attrValueOrObjectFour]@post,
?_attrValueOrObjectFour[?_attrVarFive -> ?_attrValueOrObjectFive]@post,
?_attrVarFive == 'typ:attribute',
?_attrValueOrObjectFive[?attrVarSix -> ?_attrValueOrObjectSix]@post,
?_attrValueOrObjectSix[?attrVarSeven -> ?attrValueOrObjectSeven]@post,
?attrVarSeven \= 'typ:property',
returnObjectPublicName(?_attrValueOrObjectFive, ?publicName).
// Go one more for properties
/*

?obj = obj1
?attr = medicaidRulebaseOutputVariable
?valueOrObj = obj2
?attrVar = part
?attrValueOrObject = obj3
?attrVarThree = 'typ:assess-response'
?attrValueOrObjectThree = obj4
?attrVarFour = 'typ:global-instance'
?attrValueOrObjectFour = obj5
?attrVarFive = 'typ:attribute'
?attrValueOrObjectFive = obj15
?attrVarSix = 'typ:date-val'
?attrValueOrObjectSix = obj16
?attrVarSeven = \text
?attrValueOrObjectSeven = '2017-11-30'



?attrValueOrObjectSeven[?attrVarEight -> ?attrValueOrObjectEight]@post,
?attrValueOrObjectEight[?attrVarNine -> ?attrValueOrObjectNine]@post.
*/

returnObjectPublicName(?obj, ?publicName) :-
	?obj[attribute(id) -> ?publicName]@post.


//parent person object
returnPersonParentObject(?obj) :-
	?_object[?_attrID -> ?_attrValueOrObject]@post,
	?_attrValueOrObject[?_twoAttrID -> ?obj]@post, 
	?obj[?_threeAttrID -> ?_threeAttrValueOrObject]@post, 
	?_threeAttrValueOrObject == person.
	
returnListOfPersonObjects(?people) :-
	returnPersonParentObject(?_obj),
	?_object[?_attrID -> ?_attrValueOrObject]@post,
	?_attrValueOrObject[?_twoAttrID -> ?_obj]@post, 
	?_obj[?_threeAttrID -> ?people]@post,
	?_threeAttrID == 'typ:instance'.    
	
// obj4,typ:global-instance,obj5,typ:entity,obj96,attribute(id),person
returnAllObjectsOffGlobal(?obj, ?type) :-
	?_object[?_attrID -> ?_attrValueOrObject]@post,
	?_attrValueOrObject[?_twoAttrID -> ?obj]@post, 
	?obj[?_threeAttrID -> ?type]@post,
	?_attrID == 'typ:global-instance',	
	?_twoAttrID == 'typ:entity',
	?_threeAttrID == attribute(id).

returnAllObjectsExcludingGlobal(?obj, ?type) :- 	
	?_object[?_attrID -> ?_attrValueOrObject]@post,
	?_attrValueOrObject[?_twoAttrID -> ?obj]@post, 
	?obj[?_threeAttrID -> ?type]@post,	
	?_twoAttrID == 'typ:entity',
	?_threeAttrID == attribute(id).
	
//obj96,typ:instance,obj97
//returnAllInstanceObjects(?object, person).
returnAllInstanceObjects(?object, ?type) :-
	returnAllObjectsExcludingGlobal(?_obj, ?type),
	?_obj[?_attrID -> ?object]@post,
	?_attrID = 'typ:instance'.
	
//obj5,typ:entity,obj96,typ:instance,obj97,attribute(id),1-JJDQY1	
returnAllObjectIdentifiers(?Obj, ?type, ?ID) :-
	returnAllInstanceObjects(?Obj, ?type),
	?Obj[?_attrID -> ?ID]@post,
	?_attrID = attribute(id).

/*
assignObjectMatchingIdentifier(?Obj, ?matchCriteria) :-
	\if isObjectInferred(?Obj)
	\then matchBasedOnType(?Obj, ?matchCriteria)
	\else matchBasedOnInstanceId(?Obj, ?matchCriteria).



matchBasedOnInstanceId(?Obj, ?matchCriteria) :-
		returnAllObjectIdentifiers(?Obj, ?_type, ?matchCriteria).
*/	
//obj97,typ:attribute,obj166

/*
	obj96,typ:instance,obj97,typ:attribute,obj166,attribute(id),goal_pers_citizenship_sub_type
	obj96,typ:instance,obj97,typ:attribute,obj166,attribute(type),text
	obj96,typ:instance,obj97,typ:attribute,obj166,attribute(inferred),true
	obj96,typ:instance,obj97,typ:attribute,obj166,typ:text-val,obj167
	obj96,typ:instance,obj97,typ:attribute,obj166,typ:properties,obj168
*/
returnAllObjectValues(?Obj, ?objectName, ?attr, ?value) :-
	//returnListOfPersonObjects(?people),
	returnAllObjectIdentifiers(?Obj, ?objectName, ?_ID),
	?Obj[?_attrID -> ?_attrObject]@post,
	?_attrID == 'typ:attribute',
	?_attrObject[?_attrAttributeId -> ?attr]@post,
	?_attrAttributeId == attribute(id),
	?_attrObject[?_typeValOrProperty -> ?_finalObj]@post,
	?_typeValOrProperty \= 'typ:properties',  // no need to include properties.
	?_finalObj[?_finalAttr -> ?value]@post.
	
returnTextObject(?Obj, ?value) :-	
	?Obj[?_attrID -> ?_textValObj]@post,
	?_attrID == 'typ:text-val',
	?_textValObj[?_attributeID -> ?value]@post.
	
returnTextObject(?Obj, ?value) :-	
	?Obj[?_attrID -> ?_textValObj]@post,
	?_attrID == 'typ:text-val',
	?_textValObj[?_attributeID -> ?value]@post.	
	
returnAttributeType(?obj, ?type) :-
	?obj[?_attrAttributeType -> ?type]@post,
	?_attrAttributeType == attribute(type).
		
		
isObjectInferred(?Obj) :-
	returnAllObjectIdentifiers(?Obj, ?_type, ?_ID),
	?_ID[matchOne('\\d{1}x\\w{16}') -> ?_R]@\btp.
	
//attribute(id),1-JJDQY1	
\neg isObjectInferred(?Obj) :-
	returnAllObjectIdentifiers(?Obj, ?_type, ?_ID),
	?_ID[matchOne('\\w{?}-\\w{?}') -> ?_R]@\btp.
	
child(?X, ?Y) :-	
	?X[?_attr -> ?Y]@post .
	
	// obj981
descend(?X, ?Y) :-
	child(?X, ?Y).
	
descend(?X, ?Y) :-
	child(?X, ?Z), child(?Z, ?Y).		
	
returnAllAttributeValues(?Obj, ?objectName, ?attr, ?value) :-
	returnAllObjectIdentifiers(?Obj, ?objectName, ?_ID),
	?Obj[?_attrID -> ?_attrObject]@post,
	?_attrID == 'typ:attribute',
	?_attrObject[?_attrAttributeId -> ?attr]@post,
	?_attrAttributeId == attribute(id),
	?_attrObject[?_typeValOrProperty -> ?_finalObj]@post,
	?_typeValOrProperty \= 'typ:properties',  // no need to include properties.
	?_finalObj[?_finalAttr -> ?value]@post.	
	
returnListOfPersonObjectsAndIdentifier(?person, ?ID) :-
	returnPersonParentObject(?_obj),
	?_object[?_attrID -> ?_attrValueOrObject]@post,
	?_attrValueOrObject[?_twoAttrID -> ?_obj]@post, 
	?_obj[?_threeAttrID -> ?person]@post,
	?_threeAttrID == 'typ:instance',    	
	returnAllObjectIdentifiers(?person, ?_type, ?ID).
	
returnAllAttributesUnderPerson(?ID, ?objectName, ?attr, ?value)	:-
	returnListOfPersonObjectsAndIdentifier(?_person, ?ID),
	descend(?_person, ?_childObjects),
	returnAllAttributeValues(?_childObjects, ?objectName, ?attr, ?value).
	
/* BOoooom
returnListOfPersonObjects(?people), descend(?people, ?Y), returnAllAttributeValues(?Y, ?objectName, ?attr, ?value).
*/



compareGlobalPreAndPost(?globalInstance,?publicName, ?attrType, ?attrFormat, ?attrValue ) :-
	preReturnGlobalAttributes(?globalInstance, ?prePublicName, ?preAttrType, ?preAttrFormat, ?preAttrValue),
	\if
	(
		postReturnGlobalAttributes(?globalInstance, ?, ?, ?, ?)
	)
	\then
	(
		\if
		(
			postReturnGlobalAttributes(?globalInstance, ?prePublicName, ?, ?, ?)
		)
		\then
		(
			\if
			(
				postReturnGlobalAttributes(?globalInstance, ?prePublicName, ?preAttrType, ?, ?)
			)
			\then
			(
				\if
				(
					postReturnGlobalAttributes(?globalInstance, ?prePublicName, ?preAttrType, ?preAttrFormat, ?)
				)
				\then
				(
					\if
					(
						postReturnGlobalAttributes(?globalInstance, ?prePublicName, ?preAttrType, ?preAttrFormat, ?preAttrValue)
					)
					\then
					(
						\false
					)
					\else
					(
						?publicName = prePublicName,
						?attrType = ?prePublicName,
						?attrFormat = ?pretAttrFormat,
						?attrValue = ?preAttrValue
					)
				
				)
				\else
				(
					?publicName = prePublicName,
					?attrType = ?prePublicName,
					?attrFormat = ?pretAttrFormat,
					?attrValue = 'NA'
				)
			)
			\else
			(
				?publicName = prePublicName,
				?attrType = ?prePublicName,
				?attrFormat = 'NA',
				?attrValue = 'NA'
			)
		
		)
		\else
		(
			?publicName = prePublicName,
			?attrType = 'NA',
			?attrFormat = 'NA',
			?attrValue = 'NA'
		)
	)
	\else
	(
		?publicName = 'NA',
		?attrType = 'NA',
		?attrFormat = 'NA',
		?attrValue = 'NA'
	).
	
/*	
	postReturnGlobalAttributes(?globalInstance, ?prePublicName, ?preAttrType, ?preAttrFormat, ?preAttrValue)
	
	
	(
		(
			?prePublicName \= ?postPublicName,
			?attrType = 'NA',
			?attrFormat = 'NA',
			?attrValue = 'NA'
		);
		
		
		);
		
		
	
	)
	
	
	
*/
